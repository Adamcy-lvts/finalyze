<?php

require_once __DIR__.'/vendor/autoload.php';

// Bootstrap Laravel
$app = require_once __DIR__.'/bootstrap/app.php';
$kernel = $app->make(\Illuminate\Contracts\Console\Kernel::class);
$kernel->bootstrap();

use Spatie\Browsershot\Browsershot;
use Spatie\LaravelPdf\Enums\Orientation;
use Spatie\LaravelPdf\Facades\Pdf;

echo "Testing Laravel PDF with Browsershot...\n";

try {
    // Set environment variable for testing
    putenv('BROWSERSHOT_CHROME_PATH=/usr/bin/google-chrome');

    // Mock project data
    $mockProject = (object) [
        'id' => 1,
        'slug' => 'test-project',
        'title' => 'Test Project Title',
        'topic' => 'This is a test topic for PDF generation. It should contain enough content to verify that the PDF generation is working properly with all the styling and formatting intact.',
        'type' => 'undergraduate',
        'field_of_study' => 'Computer Science',
        'university' => 'University of Lagos',
        'course' => 'Computer Science',
        'user' => (object) [
            'name' => 'Test User',
        ],
        'category' => (object) [
            'name' => 'Final Year Project',
            'target_word_count' => 15000,
            'target_duration' => '6-12 months',
        ],
    ];

    echo 'Chrome path from config: '.config('app.chrome_path')."\n";

    // Test Chrome path detection logic
    $chromePaths = [
        config('app.chrome_path'),
        '/usr/bin/chromium-browser',
        '/usr/bin/chromium',
        '/usr/bin/google-chrome',
        '/usr/bin/google-chrome-stable',
        '/snap/bin/chromium',
    ];

    $chromePath = null;
    foreach ($chromePaths as $path) {
        if ($path && file_exists($path) && is_executable($path)) {
            $chromePath = $path;
            echo "Found Chrome at: $chromePath\n";
            break;
        }
    }

    if (! $chromePath) {
        throw new Exception('No Chrome executable found!');
    }

    // Create output directory
    $outputDir = storage_path('app/public/debug-pdfs');
    if (! is_dir($outputDir)) {
        mkdir($outputDir, 0755, true);
    }

    $filename = 'laravel-pdf-test-'.date('Ymd-His').'.pdf';
    $filepath = $outputDir.'/'.$filename;

    echo "Generating PDF using Laravel PDF + Browsershot...\n";

    // Generate PDF exactly like the controller does
    $pdf = Pdf::view('pdf.topic-proposal', [
        'project' => $mockProject,
        'isPdfMode' => true,
    ])
        ->format('A4')
        ->orientation(Orientation::Portrait)
        ->withBrowsershot(function (Browsershot $browsershot) use ($chromePath) {
            $browsershot->setChromePath($chromePath)
                ->format('A4')
                ->margins(20, 20, 20, 20)
                ->showBackground()
                ->waitUntilNetworkIdle()
                ->userAgent('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36')
                ->deviceScaleFactor(1.5)
                ->timeout(120)
                ->showBrowserHeaderAndFooter()
                ->hideHeader()
                ->footerHtml('<div style="text-align: center; font-size: 10px; color: #6b7280; font-family: Times New Roman, serif; padding: 8px 0; width: 100%; display: block;">Generated by Finalyze AI Academic Assistant | '.now()->format('F j, Y \a\t g:i A').'</div>')
                ->noSandbox()
                ->setOption('disable-web-security', true)
                ->setOption('allow-running-insecure-content', true);
        });

    $pdf->save($filepath);

    if (file_exists($filepath)) {
        $fileSize = filesize($filepath);
        echo "✅ Laravel PDF generated successfully!\n";
        echo "   File: $filepath\n";
        echo '   Size: '.number_format($fileSize)." bytes\n";

        // Validate PDF file
        $fileHeader = file_get_contents($filepath, false, null, 0, 4);
        if ($fileHeader === '%PDF') {
            echo "✅ PDF file format is valid\n";
        } else {
            echo '❌ PDF file format appears corrupted (header: '.bin2hex($fileHeader).")\n";
        }

    } else {
        echo "❌ PDF file was not created\n";
    }

} catch (Exception $e) {
    echo '❌ Error: '.$e->getMessage()."\n";
    echo "Stack trace:\n".$e->getTraceAsString()."\n";
}

echo "\nLaravel PDF test completed.\n";
